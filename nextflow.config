import java.time.*
Date now = new Date()

// change according to compute infrastructure- 'lsf', 'slurm', 'local'
process.executor = 'lsf'

params {
    traceDir = "${params.outDir}/pipeline_info"
    tmpDir = "${params.outDir}/tmp/"
    timestamp = now.format("yyyyMMdd-HH-mm-ss")
    maxThreads = 64
    minimumMgmtCov = 5
    ref = "/b06x-isilon/b06x-m/mnp_nanopore/software/hg38/hg38.fa"
    annovarPath = "/b06x-isilon/b06x-m/mnp_nanopore/software/annovar/annovar/"
    annovarDB = "/b06x-isilon/b06x-m/mnp_nanopore/software/humandb/"
    annotsvAnnot = "/b06x-isilon/b06x-m/mnp_nanopore/software/AnnotSV/Annotations_Human/"
    cnvGenes = "data/genes.bed"
    modkitThreads = 32
    cnvThreads  = 32
    snifflesThreads = 32
    snpThreads = 64
    svThreads = 64
    covThreads = 8
    methThreads = 64
    mgmtThreads = 8
    runHumanVariation = false
    bamMinCoverage = 10
    outDir = null
    tmpDir = "${params.outDir}/tmp/"
    mnpFlex = false
    containerEngine = 'docker' // Set to 'docker' or 'singularity' (default: docker)
    logDir = 'logDir'
}

process {
  withLabel:'rapid_cns' {
    container = 'areebapatel/rapid_cns_3.0.0'
    clusterOptions = "-n 8 -q verylong -R rusage[mem=32G]"
  }

  withLabel:'mods' {
    container = 'ontresearch/modkit'
    clusterOptions = "-n 32 -q verylong -R rusage[mem=32G]" 
  }

  withLabel: 'gpu' {
    // Default GPU container - will be overridden by specific process containers
    container = 'nvcr.io/nvidia/clara/clara-parabricks:4.5.1-1'
  }

  withName:variantCalling{
    container = 'nvcr.io/nvidia/clara/clara-parabricks:4.5.1-1'
  }
  
  withName:structuralVariants{
    container = 'eichlerlab/sniffles:2.3.2'
  }
  withName:annotsvAnnot{
        container = 'quay.io/biocontainers/annotsv'
  }
}

// Container engine selection
singularity {
    enabled = params.containerEngine == 'singularity'
}
docker {
    enabled = params.containerEngine == 'docker'
}

profiles {
  lsf {
    process.executor = 'lsf'
    process.queue = 'normal'
    process.memory = '8 GB'
    process.cpus = 2

    // GPU processes get different settings
    withName: variantCalling {
      process.queue = 'gpu'
      process.gpus = 1
      process.memory = '16 GB'
      process.cpus = 8
      process.clusterOptions = '-gpu num=1'
    }

    withName: structuralVariants {
      process.queue = 'gpu'
      process.gpus = 1
      process.memory = '16 GB'
      process.cpus = 8
      process.clusterOptions = '-gpu num=1'
    }
  }

  slurm {
    process.executor = 'slurm'
    process.queue = 'batch'
    process.memory = '8 GB'
    process.cpus = 2

    // GPU processes get different settings
    withName: variantCalling {
      process.queue = 'gpu'
      process.gpus = 1
      process.memory = '16 GB'
      process.cpus = 8
      process.clusterOptions = '--gres=gpu:1'
    }

    withName: structuralVariants {
      process.queue = 'gpu'
      process.gpus = 1
      process.memory = '16 GB'
      process.cpus = 8
      process.clusterOptions = '--gres=gpu:1'
    }
  }

  local {
    process.executor = 'local'
    process.memory = '4 GB'
    process.cpus = 1

    // GPU processes get different settings
    withName: variantCalling {
      process.gpus = 1
      process.memory = '16 GB'
      process.cpus = 8
    }

    withName: structuralVariants {
      process.gpus = 1
      process.memory = '16 GB'
      process.cpus = 8
    }
  }
}

timeline {
  enabled = true
  file = "${params.outDir}/pipeline_info/${params.timestamp}_timeline.html"
}

report {
  enabled = true
  file = "${params.outDir}/pipeline_info/${params.timestamp}_report.html"
}

trace {
  enabled = true
  file = "${params.outDir}/pipeline_info/${params.timestamp}_trace.txt"
}