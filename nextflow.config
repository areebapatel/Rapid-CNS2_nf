import java.time.*
Date now = new Date()

params.threads = 64


// minimum average sequence coverage through the mgmt promter region
params.minimum_mgmt_cov = 5
// change according to compute infrastructure- 'lsf', 'slurm', 'local'
process.executor = 'lsf'

params {
    tracedir = "pipeline_info"
    timestamp = now.format("yyyyMMdd-HH-mm-ss")
    max_threads = 64
    minimum_mgmt_cov = 5
    model_config = "dna_r10.4.1_e8.2_400bps_hac@v4.3.0"
    remora_config = "dna_r10.4.1_e8.2_400bps_hac@v4.3.0_5mCG_5hmCG@v1"
    annovarPath = "/b06x-isilon/b06x-m/mnp_nanopore/software/annovar/annovar/"
    annovarDB = "/b06x-isilon/b06x-m/mnp_nanopore/software/humandb/"
    annotsvAnnot = "/b06x-isilon/b06x-m/mnp_nanopore/software/AnnotSV/Annotations_Human/"
    modkitThreads = 32
    cnvThreads  = 32
    snifflesThreads = 32
    snp_threads = 64
    sv_threads = 64
    annotations = "/b06x-isilon/b06x-m/mnp_nanopore/software/AnnotSV/Annotations_Human/"
    run_human_variation = FALSE
    mnp-flex = FALSE
}


timeline {
    enabled = true
    file = "${params.tracedir}/${params.timestamp}_timeline.html"
}

report {
    enabled = true
    file = "${params.tracedir}/${params.timestamp}_report.html"
}

//cleanup = true 

process {

  withLabel:basecalling {
    clusterOptions = "-q gpu -n 32 -gpu num=3:j_exclusive=yes:mode=exclusive_process:gmem=20G"
  }

  withName:subsetBam {
    container = '/b06x-isilon/b06x-m/mnp_nanopore/software/rapid_cns.sif'
    clusterOptions = " -n 32 -q verylong -R rusage[mem=32G] -q verylong" 
  }

  withName:indexBam {
    container = '/b06x-isilon/b06x-m/mnp_nanopore/software/rapid_cns.sif'
    clusterOptions = "-q verylong -R rusage[mem=32G] -n 8"
        
  }

  withName:indexSubsettedBam {
    container = '/b06x-isilon/b06x-m/mnp_nanopore/software/rapid_cns.sif'
    clusterOptions = "-q verylong -R rusage[mem=32G] -n 8"
        
  }

  withName:methylationCalls {
    container = 'ontresearch/modkit'
    clusterOptions = "-n 32 -q verylong -R rusage[mem=32G]" 

  }

  withName:variantCalling{
    container = 'nvcr.io/nvidia/clara/clara-parabricks_4.2.1-1'
  }
  
  withName:structuralVariants {
        container = 'eichlerlab/sniffles:2.3.2'
  }
  withName:annotSV {
        container = 'quay.io/biocontainers/annotsv'
  }
  withName:methylationClassification {
        container = '/b06x-isilon/b06x-m/mnp_nanopore/software/rapid_cns.sif'
  }
  withName:mgmtPromoter {
        container = '/b06x-isilon/b06x-m/mnp_nanopore/software/rapid_cns.sif'
  }
  withName:copyNumberVariants {
        container = '/b06x-isilon/b06x-m/mnp_nanopore/software/rapid_cns.sif'
  }
  withName:reportRendering {
        container = '/b06x-isilon/b06x-m/mnp_nanopore/software/rapid_cns.sif'
  }
  withName:mnpFlex {
        container = '/b06x-isilon/b06x-m/mnp_nanopore/software/rapid_cns.sif'
  }

}

// For singularity
singularity {
    enabled = true
}
